# .gitconfig by @Falcion
#
# Aliases
[alias]
    # Display every of aliases inside the Git configuration
    -aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
    
    # Edit the settings of the repository
    -bc = rev-parse --abbrev-ref HEAD
    -bu = !git rev-parse --abbrev-ref --symbolic-full-name "@{u}"

    # Set up the stream
    -up-stream = !git branch --set-upstream-to=$(git bu)

    # Delete given branch
    -delete-branch = branch -D

    # Display every branch in current repository
    -display-branch = !git branch
    -display-branches = !git branch -a 

    # Display the list of files
    -ls = ls-files

    # Check out the repository
    -co = checkout
    -co-branch = checkout -b

    # Push changes made in the branch
    -cm = !git commit -m
    -cm-add = !git add -A && git cm
    -cm-edit = commit -a --amend
    -amend = !git commit --amend --no-edit
    -amend-all = !git add -A && git amend

    # Reword the commit
    -reword = commit --amend

    # Unstage changes
    -uncommit = reset --soft HEAD~1

    # Fetch commits and branches
    -read = !git fetch -p
    -read-all = !git fetch -a -p

    # Update main (default) branch
    -up = !git pull --rebase --prune $@
    #-update = !git read && git rebase origin/main
    #-update-main = !git pull origin main
    -update = !git read && git rebase origin/default
    -update-default = !git pull origin default
    -update-branch = !git pull origin $(git bc)

    # Force-push of commit without lease
    -push-lease = push --force-with-lease

    # Functioning with submodules of repository
    -cm-sm = !git cm "SUBMODULE REFERENCE UPDATED"
    -update-sm = !git pull --recurse-submodules && git submodule update --init --recursive

    # Waypoint any changes in unsaved history
    -wp-commit = commit -am "WIPPOINT"
    -sp-commit = !git add -A && git commit -m 'SAVEPOINT'

    # Rebase each other commit
    -rebase = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'

    # Reset changes
    -undo = reset HEAD~1 --mixed
    -unstage = reset
    -uncommit = reset --soft HEAD^
    -reset-head = reset HEAD --hard
    -reset-branch = reset --hard $(git bu)
    -wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

    # Merging branches
    -mg = !git merge
    -mg-nf = !git merge --no-ff

    # Set up the audit
    -log-lite = log --oneline --decorate
    -log-last = log --abbrev-commit --decorate --format=format:'%C(bold red)%h%C(reset) - %C(bold blue)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold yellow)%d%C(reset) %n''%C(dim yellow)%H%C(reset) - %C(white)%s%C(reset) %n''%C(green)-(Committer: %cn <%ce>)%C(reset) %C(dim white)-(Author: %an <%ae>)%C(reset)' -1 HEAD --stat
    -log-branch = log --graph --abbrev-commit --decorate --format=format:'%C(bold red)%h%C(reset) - %C(bold blue)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold yellow)%d%C(reset) %n''%C(dim yellow)%H%C(reset) - %C(white)%s%C(reset) %n''%C(green)-(Committer: %cn <%ce>)%C(reset) %C(dim white)-(Author: %an <%ae>)%C(reset)' HEAD --stat
    -log-repos = log --graph --abbrev-commit --decorate --format=format:'%C(bold red)%h%C(reset) - %C(bold blue)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold yellow)%d%C(reset) %n''%C(dim yellow)%H%C(reset) - %C(white)%s%C(reset) %n''%C(green)-(Committer: %cn <%ce>)%C(reset) %C(dim white)-(Author: %an <%ae>)%C(reset)' --all --stat
    -log-current = "!myname=$(git config --get user.name);myemail=$(git config --get user.email); git log --graph --abbrev-commit --decorate --author $myemail " HEAD --stat

[core]
    # Disable paginating system.
    pager = cat

    # Edit the default IGNORE file
    excludesfile = ~/.gitignore

    # Declare mode of commands with output
    quotepath = false

    # Edit endings preferences in repository
    autocrlf = input
    safecrlf = warn

    # Launch an editor with specified values.
    # editor = emacsclient -t -a emacs
    editor = code --wait

[color]
    ui = true
    pager = true
    interactive = auto
    grep = always
    decorate = always
    showbranch = always

[color "branch"]
    current = green bold
    local = magenta
    remote = cyan

[color "diff"]
    old = red
    new = green
    meta = cyan
    frag = magenta
    whitespace = yellow reverse

[color "status"]
    added = green
    branch = green bold
    changed = cyan
    deleted = red dim
    untracked = magenta

[branch]
    autosetuprebase = always

[diff]

    # Declare default editor in differences.
    tool = code

    # Enable showing up renames.
    renames = true

    # Assume differences between specified regex.
    wordRegex = .

    # Display information about current modules.
    submodule = log

    # Enable better and descriptive initials.
    mnemonicPrefix = true

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[fetch]
    recurseSubmodules = on-demand

[grep]
    # Set up highlight matches
    break = true
    heading = true
    lineNumber = true

    # Consider most of regex
    extendedRegexp = true

[log]
    # Sutomatically follow single path
    follow = true

    # Disable decorating in reference audit
    decorate = false

    # Use abbreviate SHA of commits
    abbrevCommit = true

[credential]
    # External helping module of credentials
    helper = osxkeychain

    # Acquire credential as component of HTTP
    useHttpPath = true

[merge]
    ff = false

[mergetool]
    # Clean up backup files created by editor
    keepBackup = false

    # Clean up the temp
    keepTemporaries = false

    # Dedicated directory for temp
    writeToTemp = true

    # Accept any files prompts in case of merging modules
    prompt = false

[page]
    show = diff-so-fancy | less --tabs=4 -RFX

[pull]
    rebase = merges

[push]
    # Default push should upload current branch to the target
    default = upstream

    # Push tags with commits in reachable upstream
    followTags = true

[rebase]
    # Rebase advanced usage
    autoSquash = true
    autoStash = true

[rerere]
    enabled = true
    autoupdate = true

[status]
    # Display module referencing change summaries in status
    submoduleSummary = true

    # Recursively traverse untracked directories to display context
    showUntrackedFiles = all

[tag]
    sort = version:refname

[versionsort]
    prereleaseSuffix = -pre
    prereleaseSuffix = .pre
    prereleaseSuffix = -beta
    prereleaseSuffix = .beta
    prereleaseSuffix = -rc
    prereleaseSuffix = .rc